// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2ray.com/core/transport/internet/config.proto

package com.v2ray.core.transport.internet;

public interface StreamConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:v2ray.core.transport.internet.StreamConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Effective network.
   * </pre>
   *
   * <code>.v2ray.core.transport.internet.TransportProtocol protocol = 1;</code>
   */
  int getProtocolValue();
  /**
   * <pre>
   * Effective network.
   * </pre>
   *
   * <code>.v2ray.core.transport.internet.TransportProtocol protocol = 1;</code>
   */
  TransportProtocol getProtocol();

  /**
   * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
   */
  java.util.List<TransportConfig>
      getTransportSettingsList();
  /**
   * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
   */
  TransportConfig getTransportSettings(int index);
  /**
   * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
   */
  int getTransportSettingsCount();
  /**
   * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
   */
  java.util.List<? extends TransportConfigOrBuilder>
      getTransportSettingsOrBuilderList();
  /**
   * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
   */
  TransportConfigOrBuilder getTransportSettingsOrBuilder(
          int index);

  /**
   * <pre>
   * Type of security. Must be a message name of the settings proto.
   * </pre>
   *
   * <code>string security_type = 3;</code>
   */
  String getSecurityType();
  /**
   * <pre>
   * Type of security. Must be a message name of the settings proto.
   * </pre>
   *
   * <code>string security_type = 3;</code>
   */
  com.google.protobuf.ByteString
      getSecurityTypeBytes();

  /**
   * <pre>
   * Settings for transport security. For now the only choice is TLS.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
   */
  java.util.List<com.v2ray.core.common.serial.TypedMessage> 
      getSecuritySettingsList();
  /**
   * <pre>
   * Settings for transport security. For now the only choice is TLS.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
   */
  com.v2ray.core.common.serial.TypedMessage getSecuritySettings(int index);
  /**
   * <pre>
   * Settings for transport security. For now the only choice is TLS.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
   */
  int getSecuritySettingsCount();
  /**
   * <pre>
   * Settings for transport security. For now the only choice is TLS.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
   */
  java.util.List<? extends com.v2ray.core.common.serial.TypedMessageOrBuilder> 
      getSecuritySettingsOrBuilderList();
  /**
   * <pre>
   * Settings for transport security. For now the only choice is TLS.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
   */
  com.v2ray.core.common.serial.TypedMessageOrBuilder getSecuritySettingsOrBuilder(
          int index);
}
