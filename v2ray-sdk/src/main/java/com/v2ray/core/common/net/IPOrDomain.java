// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2ray.com/core/common/net/address.proto

package com.v2ray.core.common.net;

/**
 * <pre>
 * Address of a network host. It may be either an IP address or a domain address.
 * </pre>
 * <p>
 * Protobuf type {@code v2ray.core.common.net.IPOrDomain}
 */
public final class IPOrDomain extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:v2ray.core.common.net.IPOrDomain)
        IPOrDomainOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use IPOrDomain.newBuilder() to construct.
    private IPOrDomain(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }

    private IPOrDomain() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
        return this.unknownFields;
    }

    private IPOrDomain(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
            throw new NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
            boolean done = false;
            while (!done) {
                int tag = input.readTag();
                switch (tag) {
                    case 0:
                        done = true;
                        break;
                    case 10: {
                        addressCase_ = 1;
                        address_ = input.readBytes();
                        break;
                    }
                    case 18: {
                        String s = input.readStringRequireUtf8();
                        addressCase_ = 2;
                        address_ = s;
                        break;
                    }
                    default: {
                        if (!parseUnknownField(
                                input, unknownFields, extensionRegistry, tag)) {
                            done = true;
                        }
                        break;
                    }
                }
            }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                    e).setUnfinishedMessage(this);
        } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
        }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
        return Address.internal_static_v2ray_core_common_net_IPOrDomain_descriptor;
    }

    @Override
    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
        return Address.internal_static_v2ray_core_common_net_IPOrDomain_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        IPOrDomain.class, Builder.class);
    }

    private int addressCase_ = 0;
    private Object address_;

    public enum AddressCase
            implements com.google.protobuf.Internal.EnumLite {
        IP(1),
        DOMAIN(2),
        ADDRESS_NOT_SET(0);
        private final int value;

        private AddressCase(int value) {
            this.value = value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static AddressCase valueOf(int value) {
            return forNumber(value);
        }

        public static AddressCase forNumber(int value) {
            switch (value) {
                case 1:
                    return IP;
                case 2:
                    return DOMAIN;
                case 0:
                    return ADDRESS_NOT_SET;
                default:
                    return null;
            }
        }

        public int getNumber() {
            return this.value;
        }
    }

    ;

    public AddressCase
    getAddressCase() {
        return AddressCase.forNumber(
                addressCase_);
    }

    public static final int IP_FIELD_NUMBER = 1;

    /**
     * <pre>
     * IP address. Must by either 4 or 16 bytes.
     * </pre>
     *
     * <code>bytes ip = 1;</code>
     */
    public com.google.protobuf.ByteString getIp() {
        if (addressCase_ == 1) {
            return (com.google.protobuf.ByteString) address_;
        }
        return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int DOMAIN_FIELD_NUMBER = 2;

    /**
     * <pre>
     * Domain address.
     * </pre>
     *
     * <code>string domain = 2;</code>
     */
    public String getDomain() {
        Object ref = "";
        if (addressCase_ == 2) {
            ref = address_;
        }
        if (ref instanceof String) {
            return (String) ref;
        } else {
            com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
            String s = bs.toStringUtf8();
            if (addressCase_ == 2) {
                address_ = s;
            }
            return s;
        }
    }

    /**
     * <pre>
     * Domain address.
     * </pre>
     *
     * <code>string domain = 2;</code>
     */
    public com.google.protobuf.ByteString
    getDomainBytes() {
        Object ref = "";
        if (addressCase_ == 2) {
            ref = address_;
        }
        if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                    com.google.protobuf.ByteString.copyFromUtf8(
                            (String) ref);
            if (addressCase_ == 2) {
                address_ = b;
            }
            return b;
        } else {
            return (com.google.protobuf.ByteString) ref;
        }
    }

    private byte memoizedIsInitialized = -1;

    @Override
    public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
        if (addressCase_ == 1) {
            output.writeBytes(
                    1, (com.google.protobuf.ByteString) address_);
        }
        if (addressCase_ == 2) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, address_);
        }
        unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (addressCase_ == 1) {
            size += com.google.protobuf.CodedOutputStream
                    .computeBytesSize(
                            1, (com.google.protobuf.ByteString) address_);
        }
        if (addressCase_ == 2) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, address_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
    }

    @Override
    public boolean equals(final Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof IPOrDomain)) {
            return super.equals(obj);
        }
        IPOrDomain other = (IPOrDomain) obj;

        if (!getAddressCase().equals(other.getAddressCase())) return false;
        switch (addressCase_) {
            case 1:
                if (!getIp()
                        .equals(other.getIp())) return false;
                break;
            case 2:
                if (!getDomain()
                        .equals(other.getDomain())) return false;
                break;
            case 0:
            default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
    }

    @Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (addressCase_) {
            case 1:
                hash = (37 * hash) + IP_FIELD_NUMBER;
                hash = (53 * hash) + getIp().hashCode();
                break;
            case 2:
                hash = (37 * hash) + DOMAIN_FIELD_NUMBER;
                hash = (53 * hash) + getDomain().hashCode();
                break;
            case 0:
            default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
    }

    public static IPOrDomain parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static IPOrDomain parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static IPOrDomain parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static IPOrDomain parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static IPOrDomain parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static IPOrDomain parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static IPOrDomain parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static IPOrDomain parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static IPOrDomain parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
    }

    public static IPOrDomain parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static IPOrDomain parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static IPOrDomain parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(IPOrDomain prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
            BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
    }

    /**
     * <pre>
     * Address of a network host. It may be either an IP address or a domain address.
     * </pre>
     * <p>
     * Protobuf type {@code v2ray.core.common.net.IPOrDomain}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:v2ray.core.common.net.IPOrDomain)
            IPOrDomainOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Address.internal_static_v2ray_core_common_net_IPOrDomain_descriptor;
        }

        @Override
        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Address.internal_static_v2ray_core_common_net_IPOrDomain_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            IPOrDomain.class, Builder.class);
        }

        // Construct using com.v2ray.core.common.net.IPOrDomain.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }

        private Builder(
                BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
        }

        @Override
        public Builder clear() {
            super.clear();
            addressCase_ = 0;
            address_ = null;
            return this;
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
            return Address.internal_static_v2ray_core_common_net_IPOrDomain_descriptor;
        }

        @Override
        public IPOrDomain getDefaultInstanceForType() {
            return IPOrDomain.getDefaultInstance();
        }

        @Override
        public IPOrDomain build() {
            IPOrDomain result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        @Override
        public IPOrDomain buildPartial() {
            IPOrDomain result = new IPOrDomain(this);
            if (addressCase_ == 1) {
                result.address_ = address_;
            }
            if (addressCase_ == 2) {
                result.address_ = address_;
            }
            result.addressCase_ = addressCase_;
            onBuilt();
            return result;
        }

        @Override
        public Builder clone() {
            return super.clone();
        }

        @Override
        public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
            return super.setField(field, value);
        }

        @Override
        public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
        }

        @Override
        public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
        }

        @Override
        public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, Object value) {
            return super.setRepeatedField(field, index, value);
        }

        @Override
        public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
            return super.addRepeatedField(field, value);
        }

        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof IPOrDomain) {
                return mergeFrom((IPOrDomain) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(IPOrDomain other) {
            if (other == IPOrDomain.getDefaultInstance()) return this;
            switch (other.getAddressCase()) {
                case IP: {
                    setIp(other.getIp());
                    break;
                }
                case DOMAIN: {
                    addressCase_ = 2;
                    address_ = other.address_;
                    onChanged();
                    break;
                }
                case ADDRESS_NOT_SET: {
                    break;
                }
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
        }

        @Override
        public final boolean isInitialized() {
            return true;
        }

        @Override
        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            IPOrDomain parsedMessage = null;
            try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (IPOrDomain) e.getUnfinishedMessage();
                throw e.unwrapIOException();
            } finally {
                if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                }
            }
            return this;
        }

        private int addressCase_ = 0;
        private Object address_;

        public AddressCase
        getAddressCase() {
            return AddressCase.forNumber(
                    addressCase_);
        }

        public Builder clearAddress() {
            addressCase_ = 0;
            address_ = null;
            onChanged();
            return this;
        }


        /**
         * <pre>
         * IP address. Must by either 4 or 16 bytes.
         * </pre>
         *
         * <code>bytes ip = 1;</code>
         */
        public com.google.protobuf.ByteString getIp() {
            if (addressCase_ == 1) {
                return (com.google.protobuf.ByteString) address_;
            }
            return com.google.protobuf.ByteString.EMPTY;
        }

        /**
         * <pre>
         * IP address. Must by either 4 or 16 bytes.
         * </pre>
         *
         * <code>bytes ip = 1;</code>
         */
        public Builder setIp(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            addressCase_ = 1;
            address_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * IP address. Must by either 4 or 16 bytes.
         * </pre>
         *
         * <code>bytes ip = 1;</code>
         */
        public Builder clearIp() {
            if (addressCase_ == 1) {
                addressCase_ = 0;
                address_ = null;
                onChanged();
            }
            return this;
        }

        /**
         * <pre>
         * Domain address.
         * </pre>
         *
         * <code>string domain = 2;</code>
         */
        public String getDomain() {
            Object ref = "";
            if (addressCase_ == 2) {
                ref = address_;
            }
            if (!(ref instanceof String)) {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (addressCase_ == 2) {
                    address_ = s;
                }
                return s;
            } else {
                return (String) ref;
            }
        }

        /**
         * <pre>
         * Domain address.
         * </pre>
         *
         * <code>string domain = 2;</code>
         */
        public com.google.protobuf.ByteString
        getDomainBytes() {
            Object ref = "";
            if (addressCase_ == 2) {
                ref = address_;
            }
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                if (addressCase_ == 2) {
                    address_ = b;
                }
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * Domain address.
         * </pre>
         *
         * <code>string domain = 2;</code>
         */
        public Builder setDomain(
                String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            addressCase_ = 2;
            address_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Domain address.
         * </pre>
         *
         * <code>string domain = 2;</code>
         */
        public Builder clearDomain() {
            if (addressCase_ == 2) {
                addressCase_ = 0;
                address_ = null;
                onChanged();
            }
            return this;
        }

        /**
         * <pre>
         * Domain address.
         * </pre>
         *
         * <code>string domain = 2;</code>
         */
        public Builder setDomainBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);
            addressCase_ = 2;
            address_ = value;
            onChanged();
            return this;
        }

        @Override
        public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
        }

        @Override
        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:v2ray.core.common.net.IPOrDomain)
    }

    // @@protoc_insertion_point(class_scope:v2ray.core.common.net.IPOrDomain)
    private static final IPOrDomain DEFAULT_INSTANCE;

    static {
        DEFAULT_INSTANCE = new IPOrDomain();
    }

    public static IPOrDomain getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IPOrDomain>
            PARSER = new com.google.protobuf.AbstractParser<IPOrDomain>() {
        @Override
        public IPOrDomain parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return new IPOrDomain(input, extensionRegistry);
        }
    };

    public static com.google.protobuf.Parser<IPOrDomain> parser() {
        return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<IPOrDomain> getParserForType() {
        return PARSER;
    }

    @Override
    public IPOrDomain getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

}

