// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2ray.com/core/transport/internet/config.proto

package com.v2ray.core.transport.internet;

/**
 * Protobuf type {@code v2ray.core.transport.internet.StreamConfig}
 */
public  final class StreamConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:v2ray.core.transport.internet.StreamConfig)
    StreamConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StreamConfig.newBuilder() to construct.
  private StreamConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StreamConfig() {
    protocol_ = 0;
    transportSettings_ = java.util.Collections.emptyList();
    securityType_ = "";
    securitySettings_ = java.util.Collections.emptyList();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private StreamConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            protocol_ = rawValue;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              transportSettings_ = new java.util.ArrayList<TransportConfig>();
              mutable_bitField0_ |= 0x00000002;
            }
            transportSettings_.add(
                input.readMessage(TransportConfig.parser(), extensionRegistry));
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();

            securityType_ = s;
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              securitySettings_ = new java.util.ArrayList<com.v2ray.core.common.serial.TypedMessage>();
              mutable_bitField0_ |= 0x00000008;
            }
            securitySettings_.add(
                input.readMessage(com.v2ray.core.common.serial.TypedMessage.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        transportSettings_ = java.util.Collections.unmodifiableList(transportSettings_);
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        securitySettings_ = java.util.Collections.unmodifiableList(securitySettings_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Config.internal_static_v2ray_core_transport_internet_StreamConfig_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Config.internal_static_v2ray_core_transport_internet_StreamConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            StreamConfig.class, Builder.class);
  }

  private int bitField0_;
  public static final int PROTOCOL_FIELD_NUMBER = 1;
  private int protocol_;
  /**
   * <pre>
   * Effective network.
   * </pre>
   *
   * <code>.v2ray.core.transport.internet.TransportProtocol protocol = 1;</code>
   */
  public int getProtocolValue() {
    return protocol_;
  }
  /**
   * <pre>
   * Effective network.
   * </pre>
   *
   * <code>.v2ray.core.transport.internet.TransportProtocol protocol = 1;</code>
   */
  public TransportProtocol getProtocol() {
    @SuppressWarnings("deprecation")
    TransportProtocol result = TransportProtocol.valueOf(protocol_);
    return result == null ? TransportProtocol.UNRECOGNIZED : result;
  }

  public static final int TRANSPORT_SETTINGS_FIELD_NUMBER = 2;
  private java.util.List<TransportConfig> transportSettings_;
  /**
   * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
   */
  public java.util.List<TransportConfig> getTransportSettingsList() {
    return transportSettings_;
  }
  /**
   * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
   */
  public java.util.List<? extends TransportConfigOrBuilder>
      getTransportSettingsOrBuilderList() {
    return transportSettings_;
  }
  /**
   * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
   */
  public int getTransportSettingsCount() {
    return transportSettings_.size();
  }
  /**
   * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
   */
  public TransportConfig getTransportSettings(int index) {
    return transportSettings_.get(index);
  }
  /**
   * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
   */
  public TransportConfigOrBuilder getTransportSettingsOrBuilder(
      int index) {
    return transportSettings_.get(index);
  }

  public static final int SECURITY_TYPE_FIELD_NUMBER = 3;
  private volatile Object securityType_;
  /**
   * <pre>
   * Type of security. Must be a message name of the settings proto.
   * </pre>
   *
   * <code>string security_type = 3;</code>
   */
  public String getSecurityType() {
    Object ref = securityType_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      securityType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Type of security. Must be a message name of the settings proto.
   * </pre>
   *
   * <code>string security_type = 3;</code>
   */
  public com.google.protobuf.ByteString
      getSecurityTypeBytes() {
    Object ref = securityType_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      securityType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SECURITY_SETTINGS_FIELD_NUMBER = 4;
  private java.util.List<com.v2ray.core.common.serial.TypedMessage> securitySettings_;
  /**
   * <pre>
   * Settings for transport security. For now the only choice is TLS.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
   */
  public java.util.List<com.v2ray.core.common.serial.TypedMessage> getSecuritySettingsList() {
    return securitySettings_;
  }
  /**
   * <pre>
   * Settings for transport security. For now the only choice is TLS.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
   */
  public java.util.List<? extends com.v2ray.core.common.serial.TypedMessageOrBuilder>
      getSecuritySettingsOrBuilderList() {
    return securitySettings_;
  }
  /**
   * <pre>
   * Settings for transport security. For now the only choice is TLS.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
   */
  public int getSecuritySettingsCount() {
    return securitySettings_.size();
  }
  /**
   * <pre>
   * Settings for transport security. For now the only choice is TLS.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
   */
  public com.v2ray.core.common.serial.TypedMessage getSecuritySettings(int index) {
    return securitySettings_.get(index);
  }
  /**
   * <pre>
   * Settings for transport security. For now the only choice is TLS.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
   */
  public com.v2ray.core.common.serial.TypedMessageOrBuilder getSecuritySettingsOrBuilder(
      int index) {
    return securitySettings_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (protocol_ != TransportProtocol.TCP.getNumber()) {
      output.writeEnum(1, protocol_);
    }
    for (int i = 0; i < transportSettings_.size(); i++) {
      output.writeMessage(2, transportSettings_.get(i));
    }
    if (!getSecurityTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, securityType_);
    }
    for (int i = 0; i < securitySettings_.size(); i++) {
      output.writeMessage(4, securitySettings_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (protocol_ != TransportProtocol.TCP.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, protocol_);
    }
    for (int i = 0; i < transportSettings_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, transportSettings_.get(i));
    }
    if (!getSecurityTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, securityType_);
    }
    for (int i = 0; i < securitySettings_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, securitySettings_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof StreamConfig)) {
      return super.equals(obj);
    }
    StreamConfig other = (StreamConfig) obj;

    if (protocol_ != other.protocol_) return false;
    if (!getTransportSettingsList()
        .equals(other.getTransportSettingsList())) return false;
    if (!getSecurityType()
        .equals(other.getSecurityType())) return false;
    if (!getSecuritySettingsList()
        .equals(other.getSecuritySettingsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PROTOCOL_FIELD_NUMBER;
    hash = (53 * hash) + protocol_;
    if (getTransportSettingsCount() > 0) {
      hash = (37 * hash) + TRANSPORT_SETTINGS_FIELD_NUMBER;
      hash = (53 * hash) + getTransportSettingsList().hashCode();
    }
    hash = (37 * hash) + SECURITY_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getSecurityType().hashCode();
    if (getSecuritySettingsCount() > 0) {
      hash = (37 * hash) + SECURITY_SETTINGS_FIELD_NUMBER;
      hash = (53 * hash) + getSecuritySettingsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static StreamConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static StreamConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static StreamConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static StreamConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static StreamConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static StreamConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static StreamConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static StreamConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static StreamConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static StreamConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static StreamConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static StreamConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(StreamConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code v2ray.core.transport.internet.StreamConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:v2ray.core.transport.internet.StreamConfig)
      StreamConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Config.internal_static_v2ray_core_transport_internet_StreamConfig_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Config.internal_static_v2ray_core_transport_internet_StreamConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              StreamConfig.class, Builder.class);
    }

    // Construct using com.v2ray.core.transport.internet.StreamConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTransportSettingsFieldBuilder();
        getSecuritySettingsFieldBuilder();
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      protocol_ = 0;

      if (transportSettingsBuilder_ == null) {
        transportSettings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        transportSettingsBuilder_.clear();
      }
      securityType_ = "";

      if (securitySettingsBuilder_ == null) {
        securitySettings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        securitySettingsBuilder_.clear();
      }
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Config.internal_static_v2ray_core_transport_internet_StreamConfig_descriptor;
    }

    @Override
    public StreamConfig getDefaultInstanceForType() {
      return StreamConfig.getDefaultInstance();
    }

    @Override
    public StreamConfig build() {
      StreamConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public StreamConfig buildPartial() {
      StreamConfig result = new StreamConfig(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.protocol_ = protocol_;
      if (transportSettingsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          transportSettings_ = java.util.Collections.unmodifiableList(transportSettings_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.transportSettings_ = transportSettings_;
      } else {
        result.transportSettings_ = transportSettingsBuilder_.build();
      }
      result.securityType_ = securityType_;
      if (securitySettingsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          securitySettings_ = java.util.Collections.unmodifiableList(securitySettings_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.securitySettings_ = securitySettings_;
      } else {
        result.securitySettings_ = securitySettingsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof StreamConfig) {
        return mergeFrom((StreamConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(StreamConfig other) {
      if (other == StreamConfig.getDefaultInstance()) return this;
      if (other.protocol_ != 0) {
        setProtocolValue(other.getProtocolValue());
      }
      if (transportSettingsBuilder_ == null) {
        if (!other.transportSettings_.isEmpty()) {
          if (transportSettings_.isEmpty()) {
            transportSettings_ = other.transportSettings_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTransportSettingsIsMutable();
            transportSettings_.addAll(other.transportSettings_);
          }
          onChanged();
        }
      } else {
        if (!other.transportSettings_.isEmpty()) {
          if (transportSettingsBuilder_.isEmpty()) {
            transportSettingsBuilder_.dispose();
            transportSettingsBuilder_ = null;
            transportSettings_ = other.transportSettings_;
            bitField0_ = (bitField0_ & ~0x00000002);
            transportSettingsBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTransportSettingsFieldBuilder() : null;
          } else {
            transportSettingsBuilder_.addAllMessages(other.transportSettings_);
          }
        }
      }
      if (!other.getSecurityType().isEmpty()) {
        securityType_ = other.securityType_;
        onChanged();
      }
      if (securitySettingsBuilder_ == null) {
        if (!other.securitySettings_.isEmpty()) {
          if (securitySettings_.isEmpty()) {
            securitySettings_ = other.securitySettings_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSecuritySettingsIsMutable();
            securitySettings_.addAll(other.securitySettings_);
          }
          onChanged();
        }
      } else {
        if (!other.securitySettings_.isEmpty()) {
          if (securitySettingsBuilder_.isEmpty()) {
            securitySettingsBuilder_.dispose();
            securitySettingsBuilder_ = null;
            securitySettings_ = other.securitySettings_;
            bitField0_ = (bitField0_ & ~0x00000008);
            securitySettingsBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSecuritySettingsFieldBuilder() : null;
          } else {
            securitySettingsBuilder_.addAllMessages(other.securitySettings_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      StreamConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (StreamConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int protocol_ = 0;
    /**
     * <pre>
     * Effective network.
     * </pre>
     *
     * <code>.v2ray.core.transport.internet.TransportProtocol protocol = 1;</code>
     */
    public int getProtocolValue() {
      return protocol_;
    }
    /**
     * <pre>
     * Effective network.
     * </pre>
     *
     * <code>.v2ray.core.transport.internet.TransportProtocol protocol = 1;</code>
     */
    public Builder setProtocolValue(int value) {
      protocol_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Effective network.
     * </pre>
     *
     * <code>.v2ray.core.transport.internet.TransportProtocol protocol = 1;</code>
     */
    public TransportProtocol getProtocol() {
      @SuppressWarnings("deprecation")
      TransportProtocol result = TransportProtocol.valueOf(protocol_);
      return result == null ? TransportProtocol.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Effective network.
     * </pre>
     *
     * <code>.v2ray.core.transport.internet.TransportProtocol protocol = 1;</code>
     */
    public Builder setProtocol(TransportProtocol value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      protocol_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Effective network.
     * </pre>
     *
     * <code>.v2ray.core.transport.internet.TransportProtocol protocol = 1;</code>
     */
    public Builder clearProtocol() {
      
      protocol_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<TransportConfig> transportSettings_ =
      java.util.Collections.emptyList();
    private void ensureTransportSettingsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        transportSettings_ = new java.util.ArrayList<TransportConfig>(transportSettings_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        TransportConfig, TransportConfig.Builder, TransportConfigOrBuilder> transportSettingsBuilder_;

    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public java.util.List<TransportConfig> getTransportSettingsList() {
      if (transportSettingsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(transportSettings_);
      } else {
        return transportSettingsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public int getTransportSettingsCount() {
      if (transportSettingsBuilder_ == null) {
        return transportSettings_.size();
      } else {
        return transportSettingsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public TransportConfig getTransportSettings(int index) {
      if (transportSettingsBuilder_ == null) {
        return transportSettings_.get(index);
      } else {
        return transportSettingsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public Builder setTransportSettings(
        int index, TransportConfig value) {
      if (transportSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransportSettingsIsMutable();
        transportSettings_.set(index, value);
        onChanged();
      } else {
        transportSettingsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public Builder setTransportSettings(
        int index, TransportConfig.Builder builderForValue) {
      if (transportSettingsBuilder_ == null) {
        ensureTransportSettingsIsMutable();
        transportSettings_.set(index, builderForValue.build());
        onChanged();
      } else {
        transportSettingsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public Builder addTransportSettings(TransportConfig value) {
      if (transportSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransportSettingsIsMutable();
        transportSettings_.add(value);
        onChanged();
      } else {
        transportSettingsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public Builder addTransportSettings(
        int index, TransportConfig value) {
      if (transportSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransportSettingsIsMutable();
        transportSettings_.add(index, value);
        onChanged();
      } else {
        transportSettingsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public Builder addTransportSettings(
        TransportConfig.Builder builderForValue) {
      if (transportSettingsBuilder_ == null) {
        ensureTransportSettingsIsMutable();
        transportSettings_.add(builderForValue.build());
        onChanged();
      } else {
        transportSettingsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public Builder addTransportSettings(
        int index, TransportConfig.Builder builderForValue) {
      if (transportSettingsBuilder_ == null) {
        ensureTransportSettingsIsMutable();
        transportSettings_.add(index, builderForValue.build());
        onChanged();
      } else {
        transportSettingsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public Builder addAllTransportSettings(
        Iterable<? extends TransportConfig> values) {
      if (transportSettingsBuilder_ == null) {
        ensureTransportSettingsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, transportSettings_);
        onChanged();
      } else {
        transportSettingsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public Builder clearTransportSettings() {
      if (transportSettingsBuilder_ == null) {
        transportSettings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        transportSettingsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public Builder removeTransportSettings(int index) {
      if (transportSettingsBuilder_ == null) {
        ensureTransportSettingsIsMutable();
        transportSettings_.remove(index);
        onChanged();
      } else {
        transportSettingsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public TransportConfig.Builder getTransportSettingsBuilder(
        int index) {
      return getTransportSettingsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public TransportConfigOrBuilder getTransportSettingsOrBuilder(
        int index) {
      if (transportSettingsBuilder_ == null) {
        return transportSettings_.get(index);  } else {
        return transportSettingsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public java.util.List<? extends TransportConfigOrBuilder>
         getTransportSettingsOrBuilderList() {
      if (transportSettingsBuilder_ != null) {
        return transportSettingsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(transportSettings_);
      }
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public TransportConfig.Builder addTransportSettingsBuilder() {
      return getTransportSettingsFieldBuilder().addBuilder(
          TransportConfig.getDefaultInstance());
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public TransportConfig.Builder addTransportSettingsBuilder(
        int index) {
      return getTransportSettingsFieldBuilder().addBuilder(
          index, TransportConfig.getDefaultInstance());
    }
    /**
     * <code>repeated .v2ray.core.transport.internet.TransportConfig transport_settings = 2;</code>
     */
    public java.util.List<TransportConfig.Builder>
         getTransportSettingsBuilderList() {
      return getTransportSettingsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        TransportConfig, TransportConfig.Builder, TransportConfigOrBuilder>
        getTransportSettingsFieldBuilder() {
      if (transportSettingsBuilder_ == null) {
        transportSettingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            TransportConfig, TransportConfig.Builder, TransportConfigOrBuilder>(
                transportSettings_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        transportSettings_ = null;
      }
      return transportSettingsBuilder_;
    }

    private Object securityType_ = "";
    /**
     * <pre>
     * Type of security. Must be a message name of the settings proto.
     * </pre>
     *
     * <code>string security_type = 3;</code>
     */
    public String getSecurityType() {
      Object ref = securityType_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        securityType_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * Type of security. Must be a message name of the settings proto.
     * </pre>
     *
     * <code>string security_type = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSecurityTypeBytes() {
      Object ref = securityType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        securityType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Type of security. Must be a message name of the settings proto.
     * </pre>
     *
     * <code>string security_type = 3;</code>
     */
    public Builder setSecurityType(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      securityType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type of security. Must be a message name of the settings proto.
     * </pre>
     *
     * <code>string security_type = 3;</code>
     */
    public Builder clearSecurityType() {
      
      securityType_ = getDefaultInstance().getSecurityType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type of security. Must be a message name of the settings proto.
     * </pre>
     *
     * <code>string security_type = 3;</code>
     */
    public Builder setSecurityTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      securityType_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.v2ray.core.common.serial.TypedMessage> securitySettings_ =
      java.util.Collections.emptyList();
    private void ensureSecuritySettingsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        securitySettings_ = new java.util.ArrayList<com.v2ray.core.common.serial.TypedMessage>(securitySettings_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.common.serial.TypedMessage, com.v2ray.core.common.serial.TypedMessage.Builder, com.v2ray.core.common.serial.TypedMessageOrBuilder> securitySettingsBuilder_;

    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public java.util.List<com.v2ray.core.common.serial.TypedMessage> getSecuritySettingsList() {
      if (securitySettingsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(securitySettings_);
      } else {
        return securitySettingsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public int getSecuritySettingsCount() {
      if (securitySettingsBuilder_ == null) {
        return securitySettings_.size();
      } else {
        return securitySettingsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public com.v2ray.core.common.serial.TypedMessage getSecuritySettings(int index) {
      if (securitySettingsBuilder_ == null) {
        return securitySettings_.get(index);
      } else {
        return securitySettingsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public Builder setSecuritySettings(
        int index, com.v2ray.core.common.serial.TypedMessage value) {
      if (securitySettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSecuritySettingsIsMutable();
        securitySettings_.set(index, value);
        onChanged();
      } else {
        securitySettingsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public Builder setSecuritySettings(
        int index, com.v2ray.core.common.serial.TypedMessage.Builder builderForValue) {
      if (securitySettingsBuilder_ == null) {
        ensureSecuritySettingsIsMutable();
        securitySettings_.set(index, builderForValue.build());
        onChanged();
      } else {
        securitySettingsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public Builder addSecuritySettings(com.v2ray.core.common.serial.TypedMessage value) {
      if (securitySettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSecuritySettingsIsMutable();
        securitySettings_.add(value);
        onChanged();
      } else {
        securitySettingsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public Builder addSecuritySettings(
        int index, com.v2ray.core.common.serial.TypedMessage value) {
      if (securitySettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSecuritySettingsIsMutable();
        securitySettings_.add(index, value);
        onChanged();
      } else {
        securitySettingsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public Builder addSecuritySettings(
        com.v2ray.core.common.serial.TypedMessage.Builder builderForValue) {
      if (securitySettingsBuilder_ == null) {
        ensureSecuritySettingsIsMutable();
        securitySettings_.add(builderForValue.build());
        onChanged();
      } else {
        securitySettingsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public Builder addSecuritySettings(
        int index, com.v2ray.core.common.serial.TypedMessage.Builder builderForValue) {
      if (securitySettingsBuilder_ == null) {
        ensureSecuritySettingsIsMutable();
        securitySettings_.add(index, builderForValue.build());
        onChanged();
      } else {
        securitySettingsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public Builder addAllSecuritySettings(
        Iterable<? extends com.v2ray.core.common.serial.TypedMessage> values) {
      if (securitySettingsBuilder_ == null) {
        ensureSecuritySettingsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, securitySettings_);
        onChanged();
      } else {
        securitySettingsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public Builder clearSecuritySettings() {
      if (securitySettingsBuilder_ == null) {
        securitySettings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        securitySettingsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public Builder removeSecuritySettings(int index) {
      if (securitySettingsBuilder_ == null) {
        ensureSecuritySettingsIsMutable();
        securitySettings_.remove(index);
        onChanged();
      } else {
        securitySettingsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public com.v2ray.core.common.serial.TypedMessage.Builder getSecuritySettingsBuilder(
        int index) {
      return getSecuritySettingsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public com.v2ray.core.common.serial.TypedMessageOrBuilder getSecuritySettingsOrBuilder(
        int index) {
      if (securitySettingsBuilder_ == null) {
        return securitySettings_.get(index);  } else {
        return securitySettingsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public java.util.List<? extends com.v2ray.core.common.serial.TypedMessageOrBuilder> 
         getSecuritySettingsOrBuilderList() {
      if (securitySettingsBuilder_ != null) {
        return securitySettingsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(securitySettings_);
      }
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public com.v2ray.core.common.serial.TypedMessage.Builder addSecuritySettingsBuilder() {
      return getSecuritySettingsFieldBuilder().addBuilder(
          com.v2ray.core.common.serial.TypedMessage.getDefaultInstance());
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public com.v2ray.core.common.serial.TypedMessage.Builder addSecuritySettingsBuilder(
        int index) {
      return getSecuritySettingsFieldBuilder().addBuilder(
          index, com.v2ray.core.common.serial.TypedMessage.getDefaultInstance());
    }
    /**
     * <pre>
     * Settings for transport security. For now the only choice is TLS.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage security_settings = 4;</code>
     */
    public java.util.List<com.v2ray.core.common.serial.TypedMessage.Builder> 
         getSecuritySettingsBuilderList() {
      return getSecuritySettingsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.common.serial.TypedMessage, com.v2ray.core.common.serial.TypedMessage.Builder, com.v2ray.core.common.serial.TypedMessageOrBuilder> 
        getSecuritySettingsFieldBuilder() {
      if (securitySettingsBuilder_ == null) {
        securitySettingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.v2ray.core.common.serial.TypedMessage, com.v2ray.core.common.serial.TypedMessage.Builder, com.v2ray.core.common.serial.TypedMessageOrBuilder>(
                securitySettings_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        securitySettings_ = null;
      }
      return securitySettingsBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:v2ray.core.transport.internet.StreamConfig)
  }

  // @@protoc_insertion_point(class_scope:v2ray.core.transport.internet.StreamConfig)
  private static final StreamConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new StreamConfig();
  }

  public static StreamConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StreamConfig>
      PARSER = new com.google.protobuf.AbstractParser<StreamConfig>() {
    @Override
    public StreamConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new StreamConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<StreamConfig> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<StreamConfig> getParserForType() {
    return PARSER;
  }

  @Override
  public StreamConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

