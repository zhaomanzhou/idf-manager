<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.im.mapper.GroupMapper">
  <resultMap id="BaseResultMap" type="GroupPo">
    <id column="id" jdbcType="BIGINT" property="id" />
    
    <!-- 群聊名称 -->
    <result column="name" jdbcType="VARCHAR" property="name" />
    
    <!-- 群聊头像图片地址 -->
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    
    <!--  群聊类型；保留字段 -->
    <result column="group_type" jdbcType="INTEGER" property="groupType" />
    
    <!-- 群成员人数 -->
    <result column="member_num" jdbcType="INTEGER" property="memberNum" />
    
    <!-- 创建者id -->
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    
    <!-- 群描述 -->
    <result column="description" jdbcType="VARCHAR" property="description" />
    
    <!-- 创建时间 -->
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    
    <!-- 最后更新时间 -->
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, avatar_url, group_type, member_num, create_user_id, description, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from im_group
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from im_group
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert">
    insert into im_group (id, name, avatar_url, 
      group_type, member_num, create_user_id, 
      description, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, 
      #{groupType,jdbcType=INTEGER}, #{memberNum,jdbcType=INTEGER}, #{createUserId,jdbcType=BIGINT}, 
      #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective">

    <selectKey keyProperty="id" resultType="long">
        select LAST_INSERT_ID()
    </selectKey>

    insert into im_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="groupType != null">
        group_type,
      </if>
      <if test="memberNum != null">
        member_num,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="groupType != null">
        #{groupType,jdbcType=INTEGER},
      </if>
      <if test="memberNum != null">
        #{memberNum,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective">
    update im_group
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="groupType != null">
        group_type = #{groupType,jdbcType=INTEGER},
      </if>
      <if test="memberNum != null">
        member_num = #{memberNum,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey">
    update im_group
    set name = #{name,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      group_type = #{groupType,jdbcType=INTEGER},
      member_num = #{memberNum,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- Generate time: 2020-08-24 09:05:27 ### -->


  <!-- Your codes goes here!!! -->
  <update id="updateMemberNumByPrimaryKey">
    update im_group
    set
      member_num = #{memberNum,jdbcType=INTEGER}
    where id = #{groupId,jdbcType=BIGINT}
  </update>
  <update id="updateMemberNumsOptimistic">
    update im_group
    set
      member_num = #{newMemberNum,jdbcType=INTEGER}
    where id = #{groupId,jdbcType=BIGINT} and member_num = #{originalMemberNum,jdbcType=INTEGER}
  </update>

</mapper>