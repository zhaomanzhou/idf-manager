// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2ray.com/core/proxy/freedom/config.proto

package com.v2ray.core.proxy.freedom;

public final class ConfigOuterClass {
    private ConfigOuterClass() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    static final com.google.protobuf.Descriptors.Descriptor
            internal_static_v2ray_core_proxy_freedom_DestinationOverride_descriptor;
    static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_v2ray_core_proxy_freedom_DestinationOverride_fieldAccessorTable;
    static final com.google.protobuf.Descriptors.Descriptor
            internal_static_v2ray_core_proxy_freedom_Config_descriptor;
    static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_v2ray_core_proxy_freedom_Config_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        String[] descriptorData = {
                "\n)v2ray.com/core/proxy/freedom/config.pr" +
                        "oto\022\030v2ray.core.proxy.freedom\0320v2ray.com" +
                        "/core/common/protocol/server_spec.proto\"" +
                        "Q\n\023DestinationOverride\022:\n\006server\030\001 \001(\0132*" +
                        ".v2ray.core.common.protocol.ServerEndpoi" +
                        "nt\"\361\001\n\006Config\022H\n\017domain_strategy\030\001 \001(\0162/" +
                        ".v2ray.core.proxy.freedom.Config.DomainS" +
                        "trategy\022\023\n\007timeout\030\002 \001(\rB\002\030\001\022K\n\024destinat" +
                        "ion_override\030\003 \001(\0132-.v2ray.core.proxy.fr" +
                        "eedom.DestinationOverride\022\022\n\nuser_level\030" +
                        "\004 \001(\r\"\'\n\016DomainStrategy\022\t\n\005AS_IS\020\000\022\n\n\006US" +
                        "E_IP\020\001BD\n\034com.v2ray.core.proxy.freedomP\001" +
                        "Z\007freedom\252\002\030V2Ray.Core.Proxy.Freedomb\006pr" +
                        "oto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                                com.v2ray.core.common.protocol.ServerSpec.getDescriptor(),
                        }, assigner);
        internal_static_v2ray_core_proxy_freedom_DestinationOverride_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_v2ray_core_proxy_freedom_DestinationOverride_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_v2ray_core_proxy_freedom_DestinationOverride_descriptor,
                new String[]{"Server",});
        internal_static_v2ray_core_proxy_freedom_Config_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_v2ray_core_proxy_freedom_Config_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_v2ray_core_proxy_freedom_Config_descriptor,
                new String[]{"DomainStrategy", "Timeout", "DestinationOverride", "UserLevel",});
        com.v2ray.core.common.protocol.ServerSpec.getDescriptor();
    }

    // @@protoc_insertion_point(outer_class_scope)
}
