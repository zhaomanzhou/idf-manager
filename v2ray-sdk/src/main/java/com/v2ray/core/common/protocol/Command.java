// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2ray.com/core/common/protocol/command.proto

package com.v2ray.core.common.protocol;

public final class Command {
  private Command() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v2ray_core_common_protocol_AlternativeOutboundConfig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v2ray_core_common_protocol_AlternativeOutboundConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n,v2ray.com/core/common/protocol/command" +
      ".proto\022\032v2ray.core.common.protocol\0320v2ra" +
      "y.com/core/common/serial/typed_message.p" +
      "roto\032.v2ray.com/core/transport/internet/" +
      "config.proto\"\233\001\n\031AlternativeOutboundConf" +
      "ig\0228\n\010settings\030\001 \001(\0132&.v2ray.core.common" +
      ".serial.TypedMessage\022D\n\017stream_settings\030" +
      "\003 \001(\0132+.v2ray.core.transport.internet.St" +
      "reamConfigBI\n\036com.v2ray.core.common.prot" +
      "ocolP\001Z\010protocol\252\002\032V2Ray.Core.Common.Pro" +
      "tocolb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.v2ray.core.common.serial.TypedMessageOuterClass.getDescriptor(),
          com.v2ray.core.transport.internet.Config.getDescriptor(),
        }, assigner);
    internal_static_v2ray_core_common_protocol_AlternativeOutboundConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_v2ray_core_common_protocol_AlternativeOutboundConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v2ray_core_common_protocol_AlternativeOutboundConfig_descriptor,
        new String[] { "Settings", "StreamSettings", });
    com.v2ray.core.common.serial.TypedMessageOuterClass.getDescriptor();
    com.v2ray.core.transport.internet.Config.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
